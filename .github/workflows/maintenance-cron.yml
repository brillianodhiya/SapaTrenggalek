name: Scheduled Maintenance

on:
  schedule:
    # Run daily at 2 AM UTC (9 AM WIB)
    - cron: "0 2 * * *"
  workflow_dispatch: # Allow manual trigger

jobs:
  maintenance:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Maintenance API
        timeout-minutes: 3
        run: |
          echo "üîß Starting maintenance cronjob..."

          # Add timeout handling
          response=$(timeout 150s curl -s -w "\n%{http_code}" -X POST "${{ secrets.MAINTENANCE_ENDPOINT }}" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            -H "Content-Type: application/json" \
            -d '{"source": "github-actions", "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}') || {
            echo "‚è∞ Maintenance request timed out"
            echo "‚ö†Ô∏è This is expected for maintenance tasks - they may continue running in background"
            exit 0  # Don't fail the workflow for maintenance timeouts
          }

          http_code=$(echo "$response" | tail -n1)
          body=$(echo "$response" | head -n -1)

          echo "üìä Response Code: $http_code"
          echo "üìã Response Body: $body"

          if [ "$http_code" -eq 200 ]; then
            echo "‚úÖ Maintenance completed successfully"
          elif [ "$http_code" -eq 504 ]; then
            echo "‚è∞ Maintenance function timeout (504) - tasks may continue in background"
            echo "‚úÖ This is normal for maintenance operations"
          else
            echo "‚ùå Maintenance failed with code $http_code"
            exit 1
          fi

      - name: Log Completion
        if: always()
        run: |
          echo "üéâ Maintenance cronjob workflow completed at $(date -u +%Y-%m-%dT%H:%M:%SZ)"
